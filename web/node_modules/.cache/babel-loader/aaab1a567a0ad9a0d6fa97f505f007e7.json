{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programas\\\\NLW3\\\\web\\\\src\\\\components\\\\model\\\\ModelsWrapper\\\\index.tsx\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport ModelsContext from '../ModelsContext';\nimport ModelOverlay from '../ModelOverlay';\nimport { Container, OverlaysRoot } from './styles';\n\nconst ModelsWrapper = ({\n  children\n}) => {\n  const wrapperRef = useRef(null);\n  const [registeredModels, setRegisteredModels] = useState([]);\n  const registerModel = useCallback(model => {\n    setRegisteredModels(state => [...state, { ...model\n    }]);\n  }, []);\n  const unregisterModel = useCallback(modelName => {\n    setRegisteredModels(state => state.filter(model => model.modelName !== modelName));\n  }, []);\n  const getModelByName = useCallback(modelName => {\n    return registeredModels.find(item => item.modelName === modelName) || null;\n  }, [registeredModels]);\n  return /*#__PURE__*/React.createElement(ModelsContext.Provider, {\n    value: {\n      wrapperRef,\n      registeredModels,\n      registerModel,\n      unregisterModel,\n      getModelByName\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OverlaysRoot, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, registeredModels.map(item => /*#__PURE__*/React.createElement(ModelOverlay, {\n    key: item.modelName,\n    model: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, item.overlayNode))), children));\n};\n\nexport default ModelsWrapper;","map":{"version":3,"sources":["C:/Programas/NLW3/web/src/components/model/ModelsWrapper/index.tsx"],"names":["React","useCallback","useRef","useState","ModelsContext","ModelOverlay","Container","OverlaysRoot","ModelsWrapper","children","wrapperRef","registeredModels","setRegisteredModels","registerModel","model","state","unregisterModel","modelName","filter","getModelByName","find","item","map","overlayNode"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,OAAOC,aAAP,MAAwC,kBAAxC;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;AAEA,MAAMC,aAAuB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAChD,QAAMC,UAAU,GAAGR,MAAM,CAAiB,IAAjB,CAAzB;AAEA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAa,EAAb,CAAxD;AAEA,QAAMU,aAAa,GAAGZ,WAAW,CAAEa,KAAD,IAAqB;AACrDF,IAAAA,mBAAmB,CAACG,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAW,EAAE,GAAGD;AAAL,KAAX,CAAV,CAAnB;AACD,GAFgC,EAE9B,EAF8B,CAAjC;AAIA,QAAME,eAAe,GAAGf,WAAW,CAAEgB,SAAD,IAAuB;AACzDL,IAAAA,mBAAmB,CAACG,KAAK,IACvBA,KAAK,CAACG,MAAN,CAAaJ,KAAK,IAAIA,KAAK,CAACG,SAAN,KAAoBA,SAA1C,CADiB,CAAnB;AAGD,GAJkC,EAIhC,EAJgC,CAAnC;AAMA,QAAME,cAAc,GAAGlB,WAAW,CAC/BgB,SAAD,IAAuB;AACrB,WAAON,gBAAgB,CAACS,IAAjB,CAAsBC,IAAI,IAAIA,IAAI,CAACJ,SAAL,KAAmBA,SAAjD,KAA+D,IAAtE;AACD,GAH+B,EAIhC,CAACN,gBAAD,CAJgC,CAAlC;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLD,MAAAA,UADK;AAELC,MAAAA,gBAFK;AAGLE,MAAAA,aAHK;AAILG,MAAAA,eAJK;AAKLG,MAAAA;AALK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAET,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,gBAAgB,CAACW,GAAjB,CAAqBD,IAAI,iBACxB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,IAAI,CAACJ,SAAxB;AAAmC,IAAA,KAAK,EAAEI,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACE,WADR,CADD,CADH,CADF,EASGd,QATH,CATF,CADF;AAuBD,CA7CD;;AA+CA,eAAeD,aAAf","sourcesContent":["import React, { useCallback, useRef, useState } from 'react'\r\n\r\nimport ModelsContext, { CarModel } from '../ModelsContext'\r\nimport ModelOverlay from '../ModelOverlay'\r\n\r\nimport { Container, OverlaysRoot } from './styles'\r\n\r\nconst ModelsWrapper: React.FC = ({ children }) => {\r\n  const wrapperRef = useRef<HTMLDivElement>(null)\r\n\r\n  const [registeredModels, setRegisteredModels] = useState<CarModel[]>([])\r\n\r\n  const registerModel = useCallback((model: CarModel) => {\r\n    setRegisteredModels(state => [...state, { ...model }])\r\n  }, [])\r\n\r\n  const unregisterModel = useCallback((modelName: string) => {\r\n    setRegisteredModels(state =>\r\n      state.filter(model => model.modelName !== modelName)\r\n    )\r\n  }, [])\r\n\r\n  const getModelByName = useCallback(\r\n    (modelName: string) => {\r\n      return registeredModels.find(item => item.modelName === modelName) || null\r\n    },\r\n    [registeredModels]\r\n  )\r\n\r\n  return (\r\n    <ModelsContext.Provider\r\n      value={{\r\n        wrapperRef,\r\n        registeredModels,\r\n        registerModel,\r\n        unregisterModel,\r\n        getModelByName\r\n      }}\r\n    >\r\n      <Container ref={wrapperRef}>\r\n        <OverlaysRoot>\r\n          {registeredModels.map(item => (\r\n            <ModelOverlay key={item.modelName} model={item}>\r\n              {item.overlayNode}\r\n            </ModelOverlay>\r\n          ))}\r\n        </OverlaysRoot>\r\n\r\n        {children}\r\n      </Container>\r\n    </ModelsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ModelsWrapper\r\n"]},"metadata":{},"sourceType":"module"}