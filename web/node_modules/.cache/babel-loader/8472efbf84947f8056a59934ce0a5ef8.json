{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programas\\\\NLW3\\\\web\\\\src\\\\components\\\\model\\\\ModelsWrapper\\\\index.tsx\";\nimport React, { useCallback, useRef, useState } from 'react';\nimport { Name } from '../ModelsContext/ModelsContext';\nimport { Container } from './style';\n\nconst ModelsWrapper = ({\n  children\n}) => {\n  // \n  const wrapperRef = useRef(null);\n  const [registeredNames, setRegisterName] = useState([]);\n  const registerName = useCallback(nome => {\n    setRegisterName(state => [...state, nome]);\n  }, []);\n  const unregister = useCallback(nome => {\n    setRegisteredName(state => state.filter(nome => nome.Name != Name));\n  });\n  return /*#__PURE__*/React.createElement(Container, {\n    ref: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, children);\n};\n\nexport default ModelsWrapper;","map":{"version":3,"sources":["C:/Programas/NLW3/web/src/components/model/ModelsWrapper/index.tsx"],"names":["React","useCallback","useRef","useState","Name","Container","ModelsWrapper","children","wrapperRef","registeredNames","setRegisterName","registerName","nome","state","unregister","setRegisteredName","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AAEA,SAASC,IAAT,QAAqB,gCAArB;AAEA,SAASC,SAAT,QAA0B,SAA1B;;AAEA,MAAMC,aAAuB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAE9C;AACA,QAAMC,UAAU,GAAGN,MAAM,CAAkB,IAAlB,CAAzB;AAEA,QAAK,CAACO,eAAD,EAAkBC,eAAlB,IAAqCP,QAAQ,CAAS,EAAT,CAAlD;AAEA,QAAMQ,YAAY,GAAGV,WAAW,CAAGW,IAAD,IAAgB;AAChDF,IAAAA,eAAe,CAACG,KAAK,IAAI,CAAC,GAAGA,KAAJ,EAAWD,IAAX,CAAV,CAAf;AACD,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,QAAME,UAAU,GAAGb,WAAW,CAAGW,IAAD,IAAgB;AAC9CG,IAAAA,iBAAiB,CAACF,KAAK,IAAIA,KAAK,CAACG,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACR,IAAL,IAAaA,IAAlC,CAAV,CAAjB;AACD,GAF6B,CAA9B;AAIA,sBACI,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEI,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QADL,CADJ;AAKD,CApBD;;AAsBA,eAAeD,aAAf","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\r\n\r\nimport { Name } from '../ModelsContext/ModelsContext';\r\n\r\nimport { Container } from './style';\r\n\r\nconst ModelsWrapper: React.FC = ({children}) => {\r\n \r\n  // \r\n  const wrapperRef = useRef<HTMLDivElement> (null)\r\n\r\n  const[registeredNames, setRegisterName] = useState<Name[]>([])\r\n\r\n  const registerName = useCallback ((nome: Name) => {\r\n    setRegisterName(state => [...state, nome])\r\n  }, [])\r\n\r\n  const unregister = useCallback ((nome: Name) => {\r\n    setRegisteredName(state => state.filter(nome => nome.Name != Name))\r\n  })\r\n \r\n  return (\r\n      <Container ref={wrapperRef}>\r\n          {children}\r\n      </Container>\r\n  );\r\n}\r\n\r\nexport default ModelsWrapper;"]},"metadata":{},"sourceType":"module"}