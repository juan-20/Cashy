{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programas\\\\NLW3\\\\web\\\\src\\\\components\\\\dashboard\\\\Model\\\\ModelOverlay\\\\index.tsx\";\nimport React, { useCallback, useLayoutEffect, useState } from 'react';\nimport { useTransform } from 'framer-motion';\nimport useWrapperScroll from '../useWrapperScroll';\nimport { Container } from './styles';\n\nconst ModelOverlay = ({\n  model,\n  children\n}) => {\n  const {\n    scrollY\n  } = useWrapperScroll();\n  const getSectionDimensions = useCallback(() => {\n    var _model$sectionRef$cur, _model$sectionRef$cur2, _model$sectionRef$cur3, _model$sectionRef$cur4;\n\n    return {\n      offsetTop: (_model$sectionRef$cur = (_model$sectionRef$cur2 = model.sectionRef.current) === null || _model$sectionRef$cur2 === void 0 ? void 0 : _model$sectionRef$cur2.offsetTop) !== null && _model$sectionRef$cur !== void 0 ? _model$sectionRef$cur : 0,\n      offsetHeight: (_model$sectionRef$cur3 = (_model$sectionRef$cur4 = model.sectionRef.current) === null || _model$sectionRef$cur4 === void 0 ? void 0 : _model$sectionRef$cur4.offsetHeight) !== null && _model$sectionRef$cur3 !== void 0 ? _model$sectionRef$cur3 : 0\n    };\n  }, [model.sectionRef]);\n  const [dimensions, setDimensions] = useState(getSectionDimensions());\n  useLayoutEffect(() => {\n    function onResize() {\n      window.requestAnimationFrame(() => setDimensions(getSectionDimensions()));\n    }\n\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, [getSectionDimensions, model.sectionRef]);\n  const sectionScrollProgress = useTransform(scrollY, y => (y - dimensions.offsetTop) / dimensions.offsetHeight);\n  const opacity = useTransform(sectionScrollProgress, [-0.42, -0.05, 0.05, 0.42], [0, 1, 1, 0]);\n  const pointerEvents = useTransform(opacity, value => value > 0 ? 'auto' : 'none');\n  return /*#__PURE__*/React.createElement(Container, {\n    style: {\n      opacity,\n      pointerEvents\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport default ModelOverlay;","map":{"version":3,"sources":["C:/Programas/NLW3/web/src/components/dashboard/Model/ModelOverlay/index.tsx"],"names":["React","useCallback","useLayoutEffect","useState","useTransform","useWrapperScroll","Container","ModelOverlay","model","children","scrollY","getSectionDimensions","offsetTop","sectionRef","current","offsetHeight","dimensions","setDimensions","onResize","window","requestAnimationFrame","addEventListener","removeEventListener","sectionScrollProgress","y","opacity","pointerEvents","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,eAA7B,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,gBAAP,MAA6B,qBAA7B;AAGA,SAASC,SAAT,QAA0B,UAA1B;;AAQA,MAAMC,YAA6B,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAC7D,QAAM;AAAEC,IAAAA;AAAF,MAAcL,gBAAgB,EAApC;AAEA,QAAMM,oBAAoB,GAAGV,WAAW,CAAC,MAAM;AAAA;;AAC7C,WAAO;AACLW,MAAAA,SAAS,qDAAEJ,KAAK,CAACK,UAAN,CAAiBC,OAAnB,2DAAE,uBAA0BF,SAA5B,yEAAyC,CAD7C;AAELG,MAAAA,YAAY,sDAAEP,KAAK,CAACK,UAAN,CAAiBC,OAAnB,2DAAE,uBAA0BC,YAA5B,2EAA4C;AAFnD,KAAP;AAID,GALuC,EAKrC,CAACP,KAAK,CAACK,UAAP,CALqC,CAAxC;AAOA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAC1CQ,oBAAoB,EADsB,CAA5C;AAIAT,EAAAA,eAAe,CAAC,MAAM;AACpB,aAASgB,QAAT,GAAoB;AAClBC,MAAAA,MAAM,CAACC,qBAAP,CAA6B,MAAMH,aAAa,CAACN,oBAAoB,EAArB,CAAhD;AACD;;AAEDQ,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC;AAEA,WAAO,MAAMC,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC,CAAb;AACD,GARc,EAQZ,CAACP,oBAAD,EAAuBH,KAAK,CAACK,UAA7B,CARY,CAAf;AAUA,QAAMU,qBAAqB,GAAGnB,YAAY,CACxCM,OADwC,EAExCc,CAAC,IAAI,CAACA,CAAC,GAAGR,UAAU,CAACJ,SAAhB,IAA6BI,UAAU,CAACD,YAFL,CAA1C;AAIA,QAAMU,OAAO,GAAGrB,YAAY,CAC1BmB,qBAD0B,EAE1B,CAAC,CAAC,IAAF,EAAQ,CAAC,IAAT,EAAe,IAAf,EAAqB,IAArB,CAF0B,EAG1B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAH0B,CAA5B;AAKA,QAAMG,aAAa,GAAGtB,YAAY,CAACqB,OAAD,EAAUE,KAAK,IAC/CA,KAAK,GAAG,CAAR,GAAY,MAAZ,GAAqB,MADW,CAAlC;AAIA,sBAAO,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAEF,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CjB,QAA/C,CAAP;AACD,CAtCD;;AAwCA,eAAeF,YAAf","sourcesContent":["import React, { useCallback, useLayoutEffect, useState } from 'react'\nimport { useTransform } from 'framer-motion'\n\nimport useWrapperScroll from '../useWrapperScroll'\nimport { CarModel } from '../ModelsContext'\n\nimport { Container } from './styles'\n\ninterface Props {\n  model: CarModel\n}\n\ntype SectionDimensions = Pick<HTMLDivElement, 'offsetTop' | 'offsetHeight'>\n\nconst ModelOverlay: React.FC<Props> = ({ model, children }) => {\n  const { scrollY } = useWrapperScroll()\n\n  const getSectionDimensions = useCallback(() => {\n    return {\n      offsetTop: model.sectionRef.current?.offsetTop ?? 0,\n      offsetHeight: model.sectionRef.current?.offsetHeight ?? 0\n    } as SectionDimensions\n  }, [model.sectionRef])\n\n  const [dimensions, setDimensions] = useState<SectionDimensions>(\n    getSectionDimensions()\n  )\n\n  useLayoutEffect(() => {\n    function onResize() {\n      window.requestAnimationFrame(() => setDimensions(getSectionDimensions()))\n    }\n\n    window.addEventListener('resize', onResize)\n\n    return () => window.removeEventListener('resize', onResize)\n  }, [getSectionDimensions, model.sectionRef])\n\n  const sectionScrollProgress = useTransform(\n    scrollY,\n    y => (y - dimensions.offsetTop) / dimensions.offsetHeight\n  )\n  const opacity = useTransform(\n    sectionScrollProgress,\n    [-0.42, -0.05, 0.05, 0.42],\n    [0, 1, 1, 0]\n  )\n  const pointerEvents = useTransform(opacity, value =>\n    value > 0 ? 'auto' : 'none'\n  )\n\n  return <Container style={{ opacity, pointerEvents }}>{children}</Container>\n}\n\nexport default ModelOverlay\n"]},"metadata":{},"sourceType":"module"}