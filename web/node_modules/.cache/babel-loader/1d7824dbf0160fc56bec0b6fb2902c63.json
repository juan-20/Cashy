{"ast":null,"code":"var _jsxFileName = \"C:\\\\Programas\\\\NLW3\\\\web\\\\src\\\\components\\\\FirstAndSecond.tsx\";\nimport React from 'react';\nimport { useViewportScroll, useTransform, motion } from 'framer-motion';\nimport { Sticky } from '../pages/Dashboard/styles';\n\nconst FirstAndSecond = () => {\n  // pega a porcentagem de scroll do site:\n  const {\n    scrollYProgress\n  } = useViewportScroll(); //   o quadro vai ter opacidade 1 quando chegaar no 0.19 do scroll\n\n  const frameOpacity = useTransform(scrollYProgress, [0.196, 0.198], [0, 1]); // escala do quadro aumenta\n\n  const frameScale = useTransform(scrollYProgress, [0.558, 0.627], [0.511, 0.8]); //   com isso o quadro vai começar invisivel e se tornar visivel, e depois aumenta seu tamanho\n\n  return /*#__PURE__*/React.createElement(Sticky, {\n    className: \"second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"Sua renda per capita \\xE9:\", /*#__PURE__*/React.createElement(First, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(motion.div, {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      height: '100vh',\n      borderRadius: '4px',\n      border: '4px solid #fff',\n      opacity: frameOpacity,\n      scale: frameScale\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst First = () => {\n  const {\n    scrollYProgress\n  } = useViewportScroll(); //   conforme vai sendo scrolado o border radius vai ganhando borda\n\n  const firstRadius = useTransform(scrollYProgress, [0.198, 0.264, 0.558, 0.627], [0, 4, 4, 0]); //   de 19-36% do scroll ele vai diminuir o first de1 para 0.5 e o contrario para aumentar\n\n  const firstScale = useTransform(scrollYProgress, [0.198, 0.264, 0.558, 0.627], [1, 0.511, 0.511, 1]); //   o retangulo aumenta de 20vh para ocupar a tela toda\n\n  const leftSideHeight = useTransform(scrollYProgress, [0, 0.058], ['20vh', '100vh']); //   ele aumenta a imagem de 0 para 50 mudando a escala da img\n\n  const rightSideScale = useTransform(scrollYProgress, [0.047, 0.093], [0, 0.511]); //   a posição do eixo Y do elemento é mudada colocando ela mais bra baixo (58vh) e depoois voltando pra onde deveria\n\n  const rightSideY = useTransform(scrollYProgress, [0.047, 0.093], ['58vh', '0vh']); //   faz a troca de imagens enquanto scrola desce a imagem\n\n  const offsetY = useTransform(scrollYProgress, [0.328, 0.397, 0.461, 0.53], ['0%', '-100%', '-100%', '-200%']);\n  return /*#__PURE__*/React.createElement(Sticky, {\n    className: \"first\",\n    style: {\n      borderRadius: firstRadius,\n      scale: firstScale\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(motion.div, {\n    className: \"offset\",\n    style: {\n      y: offsetY\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(motion.div, {\n    className: \"left-side\",\n    style: {\n      // o leftSideHeight é definido por variavel acima\n      height: leftSideHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(motion.div, {\n    className: \"right-image\",\n    style: {\n      y: rightSideY,\n      scale: rightSideScale\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Esse \\xE9 o quadro vermelho da terceira scrolagem\")))));\n};\n\nexport default FirstAndSecond;","map":{"version":3,"sources":["C:/Programas/NLW3/web/src/components/FirstAndSecond.tsx"],"names":["React","useViewportScroll","useTransform","motion","Sticky","FirstAndSecond","scrollYProgress","frameOpacity","frameScale","position","top","left","right","height","borderRadius","border","opacity","scale","First","firstRadius","firstScale","leftSideHeight","rightSideScale","rightSideY","offsetY","y"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useViewportScroll, useTransform, motion } from 'framer-motion'\r\n\r\nimport { Sticky } from '../pages/Dashboard/styles'\r\n\r\nconst FirstAndSecond: React.FC = () => {\r\n    // pega a porcentagem de scroll do site:\r\n  const { scrollYProgress } = useViewportScroll()\r\n\r\n//   o quadro vai ter opacidade 1 quando chegaar no 0.19 do scroll\r\n  const frameOpacity = useTransform(scrollYProgress, [0.196, 0.198], [0, 1])\r\n// escala do quadro aumenta\r\n  const frameScale = useTransform(scrollYProgress, [0.558, 0.627], [0.511, 0.8])\r\n\r\n//   com isso o quadro vai começar invisivel e se tornar visivel, e depois aumenta seu tamanho\r\n\r\n  return (\r\n    <Sticky className=\"second\">\r\n      Sua renda per capita é: \r\n        {/* o second envolve(pai) o first por isso o second primeiro */}\r\n      <First />\r\n\r\n      {/* ela faz o quadrado no meio da tela */}\r\n      <motion.div\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: '100vh',\r\n          borderRadius: '4px',\r\n          border: '4px solid #fff',\r\n          opacity: frameOpacity,\r\n          scale: frameScale\r\n        }}\r\n      />\r\n    </Sticky>\r\n  )\r\n}\r\n\r\nconst First: React.FC = () => {\r\n  const { scrollYProgress } = useViewportScroll()\r\n\r\n//   conforme vai sendo scrolado o border radius vai ganhando borda\r\n  const firstRadius = useTransform(\r\n    scrollYProgress,\r\n    [0.198, 0.264, 0.558, 0.627],\r\n    [0, 4, 4, 0]\r\n  )\r\n\r\n//   de 19-36% do scroll ele vai diminuir o first de1 para 0.5 e o contrario para aumentar\r\n  const firstScale = useTransform(\r\n    scrollYProgress,\r\n    [0.198, 0.264, 0.558, 0.627],\r\n    [1, 0.511, 0.511, 1]\r\n  )\r\n\r\n//   o retangulo aumenta de 20vh para ocupar a tela toda\r\n  const leftSideHeight = useTransform(\r\n    scrollYProgress,\r\n    [0, 0.058],\r\n    ['20vh', '100vh']\r\n  )\r\n\r\n//   ele aumenta a imagem de 0 para 50 mudando a escala da img\r\n  const rightSideScale = useTransform(\r\n    scrollYProgress,\r\n    [0.047, 0.093],\r\n    [0, 0.511]\r\n  )\r\n\r\n//   a posição do eixo Y do elemento é mudada colocando ela mais bra baixo (58vh) e depoois voltando pra onde deveria\r\n  const rightSideY = useTransform(\r\n    scrollYProgress,\r\n    [0.047, 0.093],\r\n    ['58vh', '0vh']\r\n  )\r\n\r\n\r\n\r\n//   faz a troca de imagens enquanto scrola desce a imagem\r\n  const offsetY = useTransform(\r\n    scrollYProgress,\r\n    [0.328, 0.397, 0.461, 0.53],\r\n    ['0%', '-100%', '-100%', '-200%']\r\n  )\r\n\r\n  return (\r\n    <Sticky\r\n      className=\"first\"\r\n      style={{\r\n        borderRadius: firstRadius,\r\n        scale: firstScale,\r\n     \r\n      }}\r\n    >\r\n      <motion.div\r\n        className=\"offset\"\r\n        style={{\r\n          y: offsetY,\r\n        }}\r\n        \r\n      >\r\n        <div className=\"a\">\r\n          \r\n          <motion.div\r\n            className=\"left-side\"\r\n            style={{\r\n                // o leftSideHeight é definido por variavel acima\r\n              height: leftSideHeight,\r\n              \r\n            }}\r\n            \r\n          />\r\n          {/* <h1>Esse é o quadro vermelho da segunda scrolagem</h1> */}\r\n          <div className=\"right-side\">\r\n            <motion.div\r\n              className=\"right-image\"\r\n              style={{\r\n                y: rightSideY,\r\n                scale: rightSideScale,\r\n              \r\n              }}\r\n            />\r\n            <h1>Esse é o quadro vermelho da terceira scrolagem</h1>\r\n          </div>\r\n        </div>\r\n\r\n       \r\n        \r\n      </motion.div>\r\n    </Sticky>\r\n  )\r\n}\r\n\r\nexport default FirstAndSecond\r\n"]},"metadata":{},"sourceType":"module"}